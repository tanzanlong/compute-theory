1：tcp和udp的区别
2：流量控制和拥塞控制的实现机制
3：滑动窗口的实现机制
4：多线程如何同步。
5：进程间通讯的方式有哪些，各有什么优缺点
6：tcp连接建立的时候3次握手的具体过程，以及其中的每一步是为什么
7：tcp断开连接的具体过程，其中每一步是为什么那么做
8：tcp建立连接和断开连接的各种过程中的状态转换细节
9：epool与select的区别
10：epool中et和lt的区别与实现原理
11：写一个server程序需要注意哪些问题
12：项目中遇到的难题，你是如何解决的
13.TCP为什么不是两次连接？而是三次握手？

14.网络编程时的同步、异步、阻塞、非阻塞？
同步：函数调用在没得到结果之前，没有调用结果，不返回任何结果。
异步：函数调用在没得到结果之前，没有调用结果，返回状态信息。
阻塞：函数调用在没得到结果之前，当前线程挂起。得到结果后才返回。
非阻塞：函数调用在没得到结果之前，当前线程不会挂起，立即返回结果。

15、大端与小端的概念？各自的优势是什么？

大端与小端是用来描述多字节数据在内存中的存放顺序，即字节序。大端（Big Endian）是指低地址端存放高位字节，小端（Little Endian）是指低地址端存放低位字节。

Big Endian：符号位的判定固定为第一个字节，容易判断正负。
Little Endian：长度为1，2，4字节的数，排列方式都是一样的，数据类型转换非常方便。

16、TIME_WAIT状态的产生、危害、如何避免？
TCP协议在关闭连接的四次挥手中，为了应对最后一个 ACK 丢失的情况，Client（即主动关闭连接的一方）需要维持 time_wait 状态并停留 2 个MSL的时间。
危害：Linux分配给一个用户的文件句柄是有限的，如果系统中存在大量的 time_wait 状态，一旦达到句柄数上限，新的请求就无法被处理了，而且大量 time_wait 连接占用资源影响性能。
如何避免：在/etc/sysctl.conf文件中开启 net.ipv4.tcp_tw_reuse重用和net.ipv4.tcp_tw_recycle快速回收。

17.select / poll / epoll 的区别


18.为什么 TCP 叫数据流模式？ UDP 叫数据报模式？

所谓的“流模式”，是指TCP发送端发送几次数据和接收端接收几次数据是没有必然联系的，比如你通过 TCP 连接给另一端发送数据，你只调用了一次 write，发送了100个字节，但是对方可以分10次收完，每次10个字节；你也可以调用10次 write，每次10个字节，但是对方可以一次就收完。


19、简述一下 TCP 的滑动窗口机制


原因：这是因为TCP是面向连接的，一个 socket 中收到的数据都是由同一台主机发出，且有序地到达，所以每次读取多少数据都可以。
所谓的“数据报模式”，是指UDP发送端调用了几次 write，接收端必须用相同次数的 read 读完。UDP 是基于报文的，在接收的时候，每次最多只能读取一个报文，报文和报文是不会合并的，如果缓冲区小于报文长度，则多出的部分会被丢弃。

原因：这是因为UDP是无连接的，只要知道接收端的 IP 和端口，任何主机都可以向接收端发送数据。 这时候， 如果一次能读取超过一个报文的数据， 则会乱套。
